# "org" ensures this Service is used with the correct Serverless Framework Access Key.
# "service" is the name of this project. This will also be added to your AWS resource names.
service: whatevefr

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-2
  stage: dev
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::${env:S3_BUCKET_NAME}" # List bucket action for the bucket itself
        - "arn:aws:s3:::${env:S3_BUCKET_NAME}/*"
    - Effect: "Allow"
      Action:
        - "rds:*"
      Resource:
        - "arn:aws:rds:${env:AWS_REGION}:${env:AWS_ACCOUNT_ID}:db:${env:RDS_CLUSTER_NAME}"

functions:
  hello:
    handler: src/index.handler
    events:
      - httpApi:
          path: /
          method: get
      - httpApi:
          path: /{proxy+}
          method: any
    environment:
      S3_BUCKET_NAME: ${env:S3_BUCKET_NAME}
      AWS_ACCOUNT_ID: ${env:AWS_ACCOUNT_ID}
      RDS_CLUSTER_NAME: ${env:RDS_CLUSTER_NAME}
      RDS_USER: ${env:RDS_USER}
      RDS_HOST: ${env:RDS_HOST}
      RDS_DATABASE: ${env:RDS_DATABASE}
      RDS_PASSWORD: ${env:RDS_PASSWORD}
      RDS_PORT: ${env:RDS_PORT}
    vpc:
      securityGroupIds:
        - ${env:SECURITY_GROUP_ID}
      subnetIds:
        - ${env:SUBNET_ID_1}
        - ${env:SUBNET_ID_2}
    timeout: 15

package:
  patterns:
    - src/api/openapi.yaml

build:
  esbuild:
    bundle: true
